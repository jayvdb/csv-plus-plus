#!/usr/bin/env ruby
require 'optparse'
require_relative '../lib/gspush'

options = {}
OptionParser.new do |parser|
  parser.on("-y", "--offset-rows OFFSET", "Apply the template offset by OFFSET rows")
  parser.on("-x", "--offset-columns OFFSET", "Apply the template offset by OFFSET cells")
  parser.on("-i", "--sheet-id SHEET_ID",
            "The id of the sheet - you can extract this from the URL: https://docs.google.com/spreadsheets/d/< ... SHEET_ID ... >/edit#gid=0")
  parser.on("-n", "--sheet-name SHEET_NAME", "The name of the sheet to apply the template to")
  parser.on("-k", "--key-values KEY_VALUES", 
            "A comma-separated list of key=values which will be made available to the template")
  parser.on("-v", "--verbose", "Enable verbose output")
end.parse!(into: options)

sheet_id, sheet_name = options[:"sheet-id"], options[:"sheet-name"]

# TODO why doesn't OptionParser enforce this
unless sheet_id && sheet_name
  $stderr.puts "SHEET_ID and SHEET_NAME are required"
  exit 1
end

begin
  GSPush.apply_template_to_sheet!(ARGF.read, 
                                  sheet_id,
                                  sheet_name,
                                  row_offset: options[:"offset-rows"],
                                  cell_offset: options[:"offset-cells"],
                                  key_values: (Hash[[options[:"key-values"].split("=")]] rescue {}), 
                                  verbose: options[:verbose])
rescue GSPush::Modifier::SyntaxError => e
  $stderr.puts e
  exit 1
end
